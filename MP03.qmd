---
title: "Mini-Project #03: Do Proportional Electoral College Allocations Yield a More Representative Presidency?"  

By: Dani Servius 
---

Introduction: For this assignment I analyzed if the the claim that the U.S. Electoral College systematically biases election results away from the popular vote. In January 2021, Democratic Party’s leading data analysts, David Shor, stated ["One underrated thing about the 2020 election is that the partisan bias of the electoral college, already at it's largest point in nearly a century, got substantially larger."](https://www.vox.com/2021/1/11/22224700/electoral-college-joe-biden-donald-trump-bias-four-points-one-chart) To analyze their claim, I worked with political data such as presidential election results under different allocations for presence or absence of bias.

```{r echo = FALSE}
#| echo: false 
#| message: false 
#| warning: false
house_of_reps<- readr::read_csv("1976_2022_house.csv")
```

```{r}
#| echo: false 
#| message: false 
#| warning: false
presidents_1976_2020<- readr::read_csv("1976_2020_president.csv")
```

## Exploration of Vote Count Data

1.  Which states have gained and lost the most seats in the US House of Representatives between 1976 and 2022?

To answer this question, I first calculated the changes in the House of Representatives. From the graph below we can see leads with the most seats gained, followed by Florida, California, Arizona, and Georgia. States that have lost the most seats are New York with 13 seats lost, Ohio and Pennsylvania both tie with 8, then Illinois lost 7 and lastly Michigan with 6.

```{r}
#| echo: false 
#| message: false 
#| warning: false

library(dplyr)
library(tidyr)
library(ggplot2)

representative_changesBar <- house_of_reps |>
  select(state, year,district )|>
  filter(year == 1976 | year == 2022)|>
  group_by(year, state) |>
  summarise(seats = n_distinct(district), .groups = "drop") |>
  ggplot(aes(x = state, y = seats, fill = factor(year))) +
  geom_bar(stat = "identity", position = "dodge") +
  labs(title = "Change in Seats by State (1976 vs 2022)",
       x = "State",
       y = "Number of Seats",
       fill = "Year") +
  theme_minimal() +
  theme(axis.text.x = element_text(angle = 90, hjust = 1))

print(representative_changesBar)

```

```{r}
#| echo: false 
#| message: false 
#| warning: false

library(dplyr)
library(tidyr)
library(readr)
representative_changes <- house_of_reps|>
  select (year,state,district)|>
  distinct()|>
  group_by(state, year)|>
  summarize(seats = n())|>
  ungroup()|>
  pivot_wider(names_from = year, values_from = seats, values_fill = 0)|>
  select(state,'1976','2022')|>
  rename(seats_1976 = `1976`, seats_2022 = `2022`)|>
  mutate(seat_change = seats_2022 - seats_1976)|> 
  arrange(desc(seat_change))


top_5 <- representative_changes %>%
  arrange(desc(seat_change)) %>%
  slice_head(n = 5)

bottom_5 <- representative_changes %>%
  arrange(seat_change) %>%
  slice_head(n = 5)


print(top_5)
print(bottom_5)

```

2.  Are there any elections in our data where the election would have had a different outcome if the “fusion” system was not used and candidates only received the votes their received from their “major party line” (Democrat or Republican) and not their total number of votes across all lines?

From our data, we know that there has been elections were the outcome with no fusion would have been different

```{r echo = FALSE}
#| message: false 
#| warning: false
#| code-fold: true

library(dplyr)
library(tidyr)
library(readr)
fusion_system <- house_of_reps |>
  filter(fusion_ticket == TRUE) |>
  group_by(year, candidate) |> 
  mutate(allpartyvotes = sum(candidatevotes)) |>
  ungroup()

```

```{r echo = FALSE}
#| message: false 
#| warning: false
#| code-fold: true

library(dplyr)
library(tidyr)
library(readr)
fusion_outcome <- house_of_reps %>%
  filter(fusion_ticket == TRUE, party %in% c('DEMOCRAT', 'REPUBLICAN'))|>
  select (year, candidate, party, candidatevotes, totalvotes, fusion_ticket)|>
  distinct(candidate, .keep_all = TRUE)|>
  inner_join(fusion_system, by = "candidate")|>
  select(year.x, candidate, party.x, candidatevotes.x, allpartyvotes, totalvotes.x)|>
  distinct(candidate, .keep_all = TRUE)|>
  rename(year = year.x , party =  party.x, candidatevotes = candidatevotes.x, totalvotes = totalvotes.x)|>
  mutate(
    outcome_with_fusion = ifelse(allpartyvotes == max(allpartyvotes), "Winner", "Loser"),
    outcome_no_fusion = ifelse(totalvotes == max(totalvotes), "Winner", "Loser")
  ) |>
  ungroup()|>
  filter(outcome_with_fusion != outcome_no_fusion) 

fusion_outcome

```

3.  Do presidential candidates tend to run ahead of or run behind congressional candidates in the same state? That is, does a Democratic candidate for president tend to get more votes in a given state than all Democratic congressional candidates in the same state?

Looking at the data I collected it seems Democratic candidate for president tend to run ahead congressional candidates in the same state by 318. The average difference is also pretty significant totaling 29538.93.

```{r}
#| code-fold: true

presidential_votes <- presidents_1976_2020 |>
  filter(party_simplified == "DEMOCRAT") |>
  group_by(state, year) |>
  summarise(total_pres_votes = sum(candidatevotes), .groups = "drop")

```

```{r}
#| message: false
#| warning: false
#| code-fold: true

reps_votes <- house_of_reps |>
  filter(party == "DEMOCRAT") |>
  group_by(state, year) |>
  summarise(total_cong_votes = sum(candidatevotes), .groups = "drop")
```

```{r}
#| message: false
#| warning: false
#| code-fold: true

vote_comparison <- presidential_votes |>
  inner_join(reps_votes, by = c("state", "year")) |>
  mutate(difference = total_pres_votes - total_cong_votes)

vote_comparison |>
  summarise(
    avg_difference = mean(difference),
    pres_runs_ahead = sum(difference > 0),
    pres_runs_behind = sum(difference < 0))
```

Does this trend differ over time? Onaverage over time the trends seems to increase.

```{r}
#| message: false
#| warning: false
#| code-fold: true

library(ggplot2)

ggplot(vote_comparison, aes(x = year, y = difference)) +
  geom_point() +
  labs(
    title = "Average Difference Between Presidential and Congressional Votes Over Time",
    x = "Year",
    y = "Average Vote Difference"
  )
```

Does it differ across states or across parties?

```{r}

#| message: false
#| warning: false
#| code-fold: true

library(ggplot2)
library(dplyr)

trend_by_state <- vote_comparison |>
  group_by(state) |>
  summarise(avg_difference = mean(difference), .groups = "drop")

ggplot(trend_by_state, aes(x = reorder(state, avg_difference), y = avg_difference)) +
  geom_point() +
  labs(
    title = "Average Vote Difference by State",
    x = "State",
    y = "Average Vote Difference"
  ) +
  theme_minimal() +
  theme(axis.text.x = element_text(angle = 90, hjust = 1))


```

## Importing and Plotting Shape File Data

```{r}
#| echo: false 
#| message: false 
#| warning: false
#| code-fold: true
library(sf)

# Create a temporary directory
td <- tempdir()

# Unzip the shapefile into the temporary directory
zip_contents <- unzip("districts106.zip", exdir = td)

# Identify the .shp file within the unzipped contents
map_fname_shp <- zip_contents[grepl("shp$", zip_contents)]


us_states <- read_sf(map_fname_shp)



```

```{r}
#| echo: false 
#| message: false 
#| warning: false
#| code-fold: true
# Function to download congressional shapefiles for a given year
get_district_file_census <- function(fname, year){
    BASE_URL <- paste0("https://www2.census.gov/geo/tiger/TIGER", as.character(year), "/CD/")
    fname_ext <- paste0(fname, ".zip")
    if(!file.exists(fname_ext)){
        FILE_URL <- paste0(BASE_URL, fname_ext)
        download.file(FILE_URL, 
                      destfile = fname_ext)
    }
}

# For loop to download congressional shapefiles (zip files) from 2014-2022

us_state <- 2014:2022

# Loop over each year in us_state
for (year in us_state) {
    # Calculate the congressional district number based on the year
    congress_number <- 114 + floor((year - 2014) / 2)  # Calculate the congress number starting from 114 for 2014

    # Format the filename with the congress number
    filename <- paste0("tl_", year, "_us_cd", congress_number)
    
    # You can now use 'filename' for further processing, like downloading the file
    print(filename)  # For demonstration, you can replace this with the actual download function
}
```

```{r}
#| echo: false 
#| message: false 
#| warning: false
#| code-fold: true
us_state <- function(fname, year){
    BASE_URL <- paste0("https://www2.census.gov/geo/tiger/TIGER", as.character(year), "/STATE/")
    fname_ext <- paste0(fname, ".zip")
    if(!file.exists(fname_ext)){
        FILE_URL <- paste0(BASE_URL, fname_ext)
        download.file(FILE_URL, 
                      destfile = fname_ext)
    }
}

# Download state shapefiles zip folder from 2020

us_state("tl_2020_us_state", 2020)

td <- tempdir(); 
filename <- "tl_2020_us_state"
zip_contents <- unzip(paste0(filename, ".zip"), 
                      exdir = td)
    
fname_shp <- zip_contents[grepl("shp$", zip_contents)]
assign(paste0("state_2020_sf"), read_sf(fname_shp))
```

```{r}
#| echo: false 
#| message: false 
#| warning: false
#| code-fold: true
winner_election_2000 <- presidents_1976_2020 |>
  filter(year == 2000) |>
  filter(party_simplified %in% c("DEMOCRAT", "REPUBLICAN")) |>
  group_by(state) |>
  mutate(most_votes = max(candidatevotes, na.rm = TRUE), 
         win = candidatevotes == most_votes,    
         winner = case_when(win == TRUE ~ candidate)) |>
  ungroup() |>
  drop_na(winner) |>
  select(state, winner,party_simplified) |>
  distinct()
```

```{r}
#| echo: false 
#| message: false 
#| warning: false
#| code-fold: true
library(dplyr)
library(stringr) 

us_states <- us_states |>
  select(STATENAME, geometry, DISTRICT) |>
  mutate(STATENAME = str_trim(str_to_title(STATENAME)))

winner_election_2000 <- winner_election_2000 |>
  mutate(state = str_trim(str_to_title(state)))


us_states_with_winner <- us_states |>
  left_join(winner_election_2000, by = c("STATENAME" = "state"))

```

```{r}
#| echo: false 
#| message: false 
#| warning: false
#| code-fold: true
library(ggplot2)
library(sf)
library(dplyr)

ggplot(us_states_with_winner) +
  geom_sf(aes(fill = party_simplified), color = "black", size = 0.2) +
  scale_fill_manual(values = c("DEMOCRAT" = "blue", "REPUBLICAN" = "red")) +
  labs(title = "2000 Presidential Election Results by State",
       fill = "Winning Party") +
  theme_minimal()


us_states_with_winner

```

## Comparing the Effects of ECV Allocation Rules

1.  State-Wide Winner-Take-All

```{r}
#| echo: false 
#| message: false 
#| warning: false
#| code-fold: true
winner_take_all_state <- presidents_1976_2020|>
  group_by(year,state,party_simplified,candidate)|>
  summarize(totalvotes = sum(candidatevotes))|>
  filter(totalvotes == max(totalvotes))|>
  ungroup()|>
  arrange(desc(totalvotes))|>
  head(5)
 
winner_take_all_state 
```

2.  District-Wide Winner-Take-All + State-Wide “At Large” Votes

```{r}
#| echo: false 
#| message: false 
#| warning: false
#| code-fold: true
district_winner_take_all <- house_of_reps|>
  group_by(year,state,party,district,candidate)|>
  summarize(totalvotes = sum(candidatevotes))|>
  filter(totalvotes == max(totalvotes))|>
  arrange(desc(totalvotes))|>
  head(5)

district_winner_take_all 
```

3.  State-Wide Proportional

```{r}
#| echo: false 
#| message: false 
#| warning: false
#| code-fold: true
winner_proportional <- presidents_1976_2020|>
  group_by(year,state,party_simplified,candidate)|>
  mutate(proportional = candidatevotes/totalvotes)|>
  select(year,state,candidate,party_simplified,proportional)|>
  ungroup()|>
  arrange(desc(proportional))

winner_proportional
```

4.  National Proportional

```{r}
#| echo: false 
#| message: false 
#| warning: false
#| code-fold: true
winner_national_proportional <- presidents_1976_2020|>
  group_by(year,party_simplified,candidate)|>
  mutate(candidate_votes = sum(candidatevotes))|>
  mutate(total = sum(totalvotes))|>
  mutate(national_proportional = candidate_votes/total)|>
  ungroup()|>
  arrange(desc(national_proportional))|>
  head(5)

winner_national_proportional
```

Based on these allocation strategies, compare the winning presidential candidate with the actual historical winner.

```{r}
#| echo: false 
#| message: false 
#| warning: false
#| code-fold: true
compare_winners <- left_join(winner_take_all_state,district_winner_take_all, by = 'year' )


compare_winners
```

```{r}
#| echo: false 
#| message: false 
#| warning: false
#| code-fold: true
library(dplyr)

# Filter for Gore and Bush in the 2000 election and calculate the votes
votes_2000 <- presidents_1976_2020 %>%
  filter(year == 2000, candidate %in% c("GORE, AL", "BUSH, GEORGE W.")) %>%
  group_by(candidate) %>%
  summarise(
    total_votes = sum(totalvotes, na.rm = TRUE),
    candidate_votes = sum(candidatevotes, na.rm = TRUE)
  )

# View the result
print(votes_2000)


```

After evaluating various Electoral College Vote (ECV) allocation schemes, I conclude that the State-Wide Proportional method is the fairest approach for allocating electoral votes in U.S. presidential elections. Under this scheme, electoral votes are distributed based on the proportion of the popular vote each candidate receives within each state. This method minimizes the winner-takes-all bias seen in other systems, where a candidate can win the state's electoral votes with only a narrow margin in the popular vote.
